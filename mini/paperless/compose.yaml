# Docker Compose file for running paperless from the docker container registry.
# This file contains everything paperless needs to run.
# Paperless supports amd64, arm and arm64 hardware.
# All compose files of paperless configure paperless in the following way:
#
# - Paperless is (re)started on system boot, if it was running before shutdown.
# - Docker volumes for storing data are managed by Docker.
# - Folders for importing and exporting files are created in the same directory
#   as this file and mounted to the correct folders inside the container.
# - Paperless listens on port 8000.
#
# SQLite is used as the database. The SQLite file is stored in the data volume.
#
# In addition to that, this Docker Compose file adds the following optional
# configurations:
#
# - Apache Tika and Gotenberg servers are started with paperless and paperless
#   is configured to use these services. These provide support for consuming
#   Office documents (Word, Excel, Power Point and their LibreOffice counter-
#   parts.
#
# To install and update paperless with this file, do the following:
#
# - Copy this file as 'docker-compose.yml' and the files 'docker-compose.env'
#   and '.env' into a folder.
# - Run 'docker compose pull'.
# - Run 'docker compose up -d'.
#
# For more extensive installation and update instructions, refer to the
# documentation.

services:
  broker:
    image: docker.io/library/redis:7
    container_name: paperless-broker
    restart: unless-stopped
    volumes:
      - redisdata:/data
    networks:
      - paperless

  webserver:
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    container_name: paperless
    restart: unless-stopped
    depends_on:
      - broker
      - gotenberg
      - tika
    ports:
      - "40971:8000"
    volumes:
      - ${SERVER_DATA_LOCATION?fail}/paperless/ngx/data:/usr/src/paperless/data
      - ${SERVER_DATA_LOCATION?fail}/paperless/ngx/media:/usr/src/paperless/media
      - ${SERVER_DATA_LOCATION?fail}/paperless/ngx/export:/usr/src/paperless/export
      - ${SERVER_DATA_LOCATION?fail}/paperless/ngx/consume:/usr/src/paperless/consume
    environment:
      PAPERLESS_REDIS: redis://broker:6379
      PAPERLESS_TIKA_ENABLED: 1
      PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://gotenberg:3000
      PAPERLESS_TIKA_ENDPOINT: http://tika:9998
      PAPERLESS_URL: ${PAPERLESS_URL?fail}
      PAPERLESS_SECRET_KEY: ${PAPERLESS_SECRET_KEY?fail}
      PAPERLESS_TIME_ZONE: ${PAPERLESS_TIME_ZONE?fail}
    networks:
      - mini
      - paperless
    extra_hosts:
      - "host.docker.internal:host-gateway"

  gotenberg:
    image: docker.io/gotenberg/gotenberg:8.19
    container_name: paperless-gotenberg
    restart: unless-stopped
    # The gotenberg chromium route is used to convert .eml files. We do not
    # want to allow external content like tracking pixels or even javascript.
    command:
      - "gotenberg"
      - "--chromium-disable-javascript=true"
      - "--chromium-allow-list=file:///tmp/.*"
    networks:
      - paperless

  tika:
    image: docker.io/apache/tika:latest
    container_name: paperless-tika
    restart: unless-stopped
    networks:
      - paperless

  paperless-ai:
    image: clusterzx/paperless-ai
    container_name: paperless-ai
    restart: unless-stopped
    network_mode: host
    volumes:
      - ${SERVER_DATA_LOCATION?fail}/paperless/ngx/data:/app/data
    environment:
      PAPERLESS_AI_PORT: ${PAPERLESS_AI_PORT?fail}

volumes:
  redisdata:

networks:
  mini:
    external: true
  paperless:
    external: false
